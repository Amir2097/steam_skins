from aiogram import types, F, Router
from aiogram.types import Message, CallbackQuery
from steam_test import steam_data, type_cs
from aiogram.utils.markdown import hbold, hlink
import keyboard as kb
import asyncio
import json

router = Router()


@router.callback_query(F.data == "skins")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer(
        f"üöÄ –ê–Ω–∞–ª–∏–∑ —Å–∫–∏–¥–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Å–∫–∏–Ω–æ–≤ ‚Üì\n"
        f"- –Ω–µ –º–µ–Ω—å—à–µ 20 %\n"
        f"- –æ—Ç 100 —Ä—É–±–ª–µ–π –¥–æ 4000 —Ä—É–±–ª–µ–π\n"
        f"- –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ USD", reply_markup=kb.cs_sites
    )


@router.callback_query(F.data == "csmoney")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer(
        f"‚Äº –í–∞–º —Å–ª–µ–¥—É–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Üì", reply_markup=kb.csmoney_gun
    )


@router.callback_query(F.data == "pistols")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–ü–∏—Å—Ç–æ–ª–µ—Ç—ã"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "pistolsgun")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–ü–∏—Å—Ç–æ–ª–µ—Ç—ã-–ø—É–ª–µ–º–µ—Ç—ã"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "rifle")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–®—Ç—É—Ä–º–æ–≤—ã–µ –≤–∏–Ω—Ç–æ–≤–∫–∏"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "sniper")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "shotgun")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–î—Ä–æ–±–æ–≤–∏–∫–∏"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "machine")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–ü—É–ª–µ–º–µ—Ç—ã"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "keys")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–ö–ª—é—á–∏"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)


@router.callback_query(F.data == "another")
async def help_handler(callback_query: CallbackQuery):
    await callback_query.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    steam_data(type_cs["–î—Ä—É–≥–∏–µ"])

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("Discount")}%\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ: ")}{item.get("BeforePrice")} —Ä—É–±.\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ: ")}{item.get("PriceNow")} —Ä—É–±. üî•'

        if index % 20 == 0:
            await asyncio.sleep(3)

        await callback_query.message.answer(card)